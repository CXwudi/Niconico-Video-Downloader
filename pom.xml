<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.cxwudi</groupId>
  <artifactId>niconico-video-downloader</artifactId>
  <version>3.1.0</version>

  <prerequisites>
    <maven>3.6.1</maven>
  </prerequisites>

  <name>niconico-video-downloader</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>11</java.version>
    <maven.compiler.source>1.${java.version}</maven.compiler.source>
    <maven.compiler.target>1.${java.version}</maven.compiler.target>
    <junit.jupiter.version>5.6.2</junit.jupiter.version>
    <log4j2.version>2.17.0</log4j2.version>

    <lib.dir>lib</lib.dir>
    <data.dir>data</data.dir>
    <release.dir>${project.basedir}/release</release.dir>
    <dependencies.dir>package</dependencies.dir>
    <niconico_downloader.mainClass>com.cxwudi.niconico_videodownloader.Main</niconico_downloader.mainClass>
  </properties>

  <dependencies>
    <!-- Junit 5 Jupiter -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- The Selenium library -->
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-chrome-driver</artifactId>
      <version>3.141.59</version>
    </dependency>

    <!-- Auto download webdriver and setup the environment -->
    <dependency>
      <groupId>io.github.bonigarcia</groupId>
      <artifactId>webdrivermanager</artifactId>
      <version>3.8.1</version>
    </dependency>

    <!-- Apache Common Configuration, use for reading .property file -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-configuration2</artifactId>
      <version>2.7</version>
    </dependency>
    <dependency> <!-- Support for Common Configuration -->
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.9.4</version>
    </dependency>

    <!-- Apache Common IO, used to replace maven-resource-plugin to copy properties file un-touch -->
<!--    <dependency>-->
<!--      <groupId>commons-io</groupId>-->
<!--      <artifactId>commons-io</artifactId>-->
<!--      <version>2.6</version>-->
<!--    </dependency>-->

    <!-- The JAVE (Java Audio Video Encoder) library, which warp and contains a ffmpeg.exe executable 
      file in jar -->
    <dependency> <!-- you can just use his ffmpeg.exe if u want -->
      <groupId>ws.schild</groupId>
      <artifactId>jave-all-deps</artifactId>
      <version>2.7.3</version>
    </dependency>
    
    <!-- Logger System -->
    <dependency><!-- SFL4J logger facade--> <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.28</version>
    </dependency>
    <dependency><!-- Log4j2 -->
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j2.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j2.version}</version>
    </dependency>
    <dependency><!-- SLF4J to Log4j2 bridge --> <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl -->
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>${log4j2.version}</version>
    </dependency>
    <dependency><!-- Support of async logger --> <!-- https://mvnrepository.com/artifact/com.lmax/disruptor -->
      <groupId>com.lmax</groupId>
      <artifactId>disruptor</artifactId>
      <version>3.4.2</version>
    </dependency>
    

    <!-- Java MP4 Parser, to warp raw .aac file into .m4a file, without re-encoding -->
    <!-- Don't use new version, api changes a lot -->
    <!-- currently using mp4box.exe in stead of using this library, for better performance -->
    <!-- <dependency> 
    <groupId>com.googlecode.mp4parser</groupId> 
    <artifactId>isoparser</artifactId> 
      <version>1.1.22</version> 
      </dependency> -->

    <!-- Too bad that no maven repository for youtube-dl, have to manually update youtube-dl.exe file 
      in lib/ -->
  </dependencies>

  <build>
    <plugins>

      <plugin> <!-- if want to configure test, use this plugin -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M3</version>
        <executions>
          <execution>
            <id>default-test</id><!-- to force change the order of surefire test in effective POM, since 
              eclipse IDE add default order on test using id here -->
            <phase>test</phase>
            <goals>
              <goal>test</goal><!-- so far we choose to not change the order, but change the order of 
                selenium plugin to the frontier -->
            </goals>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </execution>
        </executions>
        <!-- Learn mavan: <configuration> tab put here will set parameter for all executions in <executions> -->
      </plugin>

      <plugin> <!-- Update Maven own maven-compiler-plugin from 3.1.0 to 3.8.1, in order to support compilation
          of Java 11 -->
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <release>${java.version}</release>
        </configuration>
      </plugin>

      <plugin> <!-- jar + assembly to produce a fat zip, recommended way to publish releases-->
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>${dependencies.dir}</classpathPrefix>
              <mainClass>${niconico_downloader.mainClass}</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>make-assembly</id> <!-- this is used for inheritance merges -->
            <phase>package</phase> <!-- bind to the packaging phase -->
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <appendAssemblyId>false</appendAssemblyId>
          <descriptors>
            <!-- children plz specify your location of configuration file -->
            <descriptor>src/main/resources/assembly/zip.xml</descriptor> <!-- this should be independent for each children -->
          </descriptors>
          <outputDirectory>${release.dir}</outputDirectory>
        </configuration>
      </plugin>

    </plugins>

    <!-- Auto-generated plug-in manager to get rid of execution phase error shown in Eclipse IDE -->
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence 
          on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      com.internetitem
                    </groupId>
                    <artifactId>
                      write-properties-file-maven-plugin
                    </artifactId>
                    <versionRange>
                      [1.0.1,)
                    </versionRange>
                    <goals>
                      <goal>
                        write-properties-file
                      </goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      com.lazerycode.selenium
                    </groupId>
                    <artifactId>
                      driver-binary-downloader-maven-plugin
                    </artifactId>
                    <versionRange>
                      [1.0.17,)
                    </versionRange>
                    <goals>
                      <goal>selenium</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <versionRange>[1.6.0,)</versionRange>
                    <goals>
                      <goal>java</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <description>A new evolution of Niconico video downloader that use maven, youtube-dl, Selenium, and etc. </description>
</project>
